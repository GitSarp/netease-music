<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.freaxjj</groupId>
    <artifactId>netease-music</artifactId>
    <version>20230306-arm64</version>
    <name>netease-music</name>
    <description>netease music service</description>
    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>2021.0.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>2021.1</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        <!-- SpringCloud 2.4版本 之后不再 优先读取bootstrap文件，导致bootstrap不起作用 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>2.0.1.Final</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.75</version>
        </dependency>

        <!-- sdk https://github.com/1015770492/yumbo-music-utils -->
        <dependency>
            <groupId>top.yumbo.music</groupId>
            <artifactId>yumbo-music-utils</artifactId>
            <version>1.2.3</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>netease-music</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.37.0</version>
                <configuration>
                    <!--<dockerHost>可以配置在环境变量中</dockerHost>-->
                    <!-- 私服地址，全局配置，不能加https-->
                    <!--<registry>registry.cn-hangzhou.aliyuncs.com</registry>-->
<!--                    <registry>152.69.206.48:5001</registry>-->
                    <!-- 可以配置到maven的setting文件中(server的id应该与nexus中的仓库名一致) -->
<!--                    <authConfig>-->
<!--                        <username></username>-->
<!--                        <password></password>-->
<!--                    </authConfig>-->
                    <images>
                        <image>
                            <registry>harbor.freaxjj.site:4343</registry>
                            <!-- 镜像名称，格式为：命名空间/镜像名称:镜像tag -->
                            <name>freaxjj-docker/${project.build.finalName}:${project.version}</name>
                            <!--<name>152.69.206.48:5001/freaxjj_dev/${project.build.finalName}:latest</name>-->
                            <!--<registry>registry.cn-hangzhou.aliyuncs.com</registry>-->
                            <!-- 镜像名称，格式为：命名空间/仓库名称:镜像版本号 -->
                            <!--<name>freaxjj_dev/${project.build.finalName}:${project.version}</name>-->
                            <!--别名:用于容器命名和在docker-compose.yml文件只能找到对应名字的配置-->
                            <alias>${project.name}</alias>
                            <build>
                                <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                            </build>
                            <!--配置docker-compose文件-->
                            <!--                            <external>-->
                            <!--                                <type>compose</type>-->
                            <!--                                <basedir>${project.basedir}/docker</basedir>-->
                            <!--                                <composeFile>docker-compose.yml</composeFile>-->
                            <!--                            </external>-->
                            <!--容器run相关配置-->
                            <run>
                                <!--配置运行时容器命名策略为:别名,如果不指定则默认为none,即使用随机分配名称-->
                                <namingStrategy>alias</namingStrategy>
                                <!--设置容器间连接-->
                                <!--                                <links>-->
                                <!--                                    <link>mysql:db</link>-->
                                <!--                                </links>-->
                                <!--设置容器和宿主机目录挂载-->
<!--                                <volumes>-->
<!--                                    <bind>-->
<!--                                        <volume>/etc/localtime:/etc/localtime</volume>-->
<!--                                    </bind>-->
<!--                                </volumes>-->
                            </run>
                        </image>
                    </images>
                    <buildArgs>
                        <!-- dockerfile参数，指定jar路径 -->
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>com.spotify</groupId>-->
<!--                <artifactId>dockerfile-maven-plugin</artifactId>-->
<!--                <version>1.4.13</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <id>default</id>-->
<!--                        <goals>-->
<!--                            <goal>build</goal>-->
<!--                            <goal>push</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--                <configuration>-->
<!--                    <username></username>-->
<!--                    <password></password>-->
<!--                    <repository>registry.cn-hangzhou.aliyuncs.com/freaxjj_dev/${project.artifactId}</repository>-->
<!--                    <tag>${project.version}</tag>-->
<!--                    <buildArgs>-->
<!--                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>-->
<!--                    </buildArgs>-->
<!--                </configuration>-->
<!--            </plugin>-->
        </plugins>
    </build>

</project>
